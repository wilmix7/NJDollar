JWEB
=======

   JWEB  is a   next  Programming Language  invented  by  wilmix jemin  j in JAS.

here   we  had  to  write   C oops and   JAVA like  oops logic.

So  that  Java or  oops  professionals  can  easily  catch up  ...



SYNTAX:  Simillar  to  JAVA logic
========




<JWEB>

<JPACK>

<JLOGIC>

public  class  Programname

{
          public  static  void main(String args[]) throws Exception

{

<!  oops  Logic  !>

		
}

}
</JLOGIC>

</JWEB>



SYNTAX for  JWEB program:
========================



<?JWEB> //starting  of  JWEB  program

<INVOKE> <JWEB>.util;//  load  jweb util  packages.
<INVOKE> CDollar.WDBA;//load  CDollar.wdba  packages to  connect  with  wnosql  database

<PACK> namespacename // create  namespace  name Myp
{
    <CLASS> Programs
    {
          public void main()  //jweb  main  function  which  JAVA-JWEB logic  dll  will  be  used  in  JWEB  program.

        {
		
//Write  only  oops  logic  and  it  generates  prototype  .exe ...

to be  used  with  JWEb-cloud.
}





Example:
=======

<JWEB>

<JPACK>

<JLOGIC>

public  class  Jquerytest

{
          public  static  void main(String args[]) throws Exception

{

//Jquerytest  enter  Jquery   code  in html  file
HTML.displayhtml("draw.html");//display the   jquery  html  file contents

HTML.displayhtml("jquery1.html");

HTML.displayhtml("jquery2.html");
HTML.displayhtml("html1.html");
HTML.displayhtml("index1.html");




		
}

}
</JLOGIC>

</JWEB>




Example -2: USE  CDollar  Datastructures  with  Arraylist  and  Cdollar  dts  Bucket

============



<JWEB>

<JPACK>

<JLOGIC>


public class index {

  public static  void main(String  args[] ) {
   

HTML.displayhtml("wilson.html");





		ArrayList  ar= new  ArrayList();
		
		ArrayList  ar2= new  ArrayList();
		for  (int  i=0;i<=1000;i++)
		
		ar.add(i);
		
		System.out.println(""+ar);
		System.out.println("<Body  bgcolor=violet>");



		Bucket list2 = new Bucket("BUCKETS");
		
		
		
		
		      list2.KeyAdd("1101");  
                    
                     list2.add("jemin");
                     
                     list2.RandomAdd();    
                     
                     list2.Display(list2);

                 
System.out.println(""+list2.DisplayO(list2,1));






  }
}



EXAMPLE -3: Solving  Complex  numbers  problem
===========



<JWEB>

<JPACK>

<JLOGIC>


public class ComplexDemo {

  public static  void main(String  args[] ) {
    Complex c = new Complex(3,  5);
    Complex d = new Complex(2, -2);
System.out.println(c);
System.out.println(c + ".getReal() = " + c.getReal());
System.out.println(c + " + " + d + " = " + c.add(d));
System.out.println(c + " + " + d + " = " + Complex.add(c, d));
System.out.println(c + " * " + d + " = " + c.multiply(d));
System.out.println(Complex.divide(c, d));
  }
}


class Complex {

  private double r;

  private double i;


  Complex(double rr, double ii) {
    r = rr;
    i = ii;
  }


  public String StringConvert() {
    StringBuffer sb = new StringBuffer().append(r);
    if (i>0)
      sb.append('+'); // else append(i) appends - sign
    return sb.append(i).append('i').toString();
  }

  
  public double getReal() {
    return r;
  }
 
  public double getImaginary() {
    return i;
  }

  public double magnitude() {
    return Math.sqrt(r*r + i*i);
  }


  public Complex add(Complex other) {
    return add(this, other);
  }

  public static Complex add(Complex c1, Complex c2) {
    return new Complex(c1.r+c2.r, c1.i+c2.i);
  }


  public Complex subtract(Complex other) {
    return subtract(this, other);
  }


  public static Complex subtract(Complex c1, Complex c2) {
    return new Complex(c1.r-c2.r, c1.i-c2.i);
  }


  public Complex multiply(Complex other) {
    return multiply(this, other);
  }

  public static Complex multiply(Complex c1, Complex c2) {
    return new Complex(c1.r*c2.r - c1.i*c2.i, c1.r*c2.i + c1.i*c2.r);
  }


  public static Complex divide(Complex c1, Complex c2) {
    return new Complex(
      (c1.r*c2.r+c1.i*c2.i)/(c2.r*c2.r+c2.i*c2.i),
      (c1.i*c2.r-c1.r*c2.i)/(c2.r*c2.r+c2.i*c2.i));
  }
  

  public boolean equals(Object o) {
    if (!(o instanceof Complex))
      throw new IllegalArgumentException(
          "Complex.equals argument must be a Complex");
    Complex other = (Complex)o;
    return r == other.r && i == other.i;
  }
  

  public int hashCode() {
    return (int)( r) |  (int)i;
  }
}

</JLOGIC>

</JWEB>





Note:
=====

visit  out   JWEB  website  in  JIT tutorial  site or  JWEB ebook  for  more  details  about  JWEB- JAS.

JWEB  is  used  only  with  wallet  not used  in mobiles...



	
